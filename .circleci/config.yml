version: 2
workflows:
    version: 2
    build_test_deploy:
        jobs:
            - build_yarn
            - test:
                  requires:
                      - build_yarn
            - test_migrations:
                  requires:
                      - build_yarn
            - build_android:
                  requires:
                      - build_yarn
            - request_deploy_app:
                  type: approval
            - deploy_expo:
                  context: expo-credentials
                  requires:
                      - request_deploy_app
                      - test
                      - test_migrations
            - deploy_ios:
                  context: expo-credentials
                  requires:
                      - deploy_expo
            - deploy_android:
                  context: expo-credentials
                  requires:
                      - deploy_expo
jobs:
    build_yarn:
        docker:
            - image: circleci/node:13.5.0
        steps:
            - checkout
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-modules-{{ checksum "yarn.lock" }}
            - run: ls node_modules || yarn install --frozen-lockfile
            - run: ls app/node_modules || (cd app && yarn install --frozen-lockfile)
            - run: ls step-bible/node_modules || (cd step-bible && yarn install --frozen-lockfile)
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-modules-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules
                      - app/node_modules
                      - core/node_modules
                      - step-bible/node_modules
    test:
        docker:
            - image: circleci/node:13.5.0
        steps:
            - checkout
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-modules-{{ checksum "yarn.lock" }}
            - run: yarn install --frozen-lockfile
            - run: cd core && yarn test
            - run: cd importers && yarn test
            - run: cd client && yarn test --passWithNoTests
            - run: cd app && yarn install
            - run: cd app && yarn test
    test_migrations:
        machine:
            image: ubuntu-1604:201903-01
        environment:
            BASH_ENV: /opt/circleci/.nvm/nvm.sh
        steps:
            - checkout
            - run: core/src/tests/install_yarn.sh
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-modules-{{ checksum "yarn.lock" }}
            - run: nvm use 13.5.0 && yarn install --frozen-lockfile
            - run: core/src/tests/mysql_migration_tests.sh
            - run: core/src/tests/postgres_migration_tests.sh
            - run: core/src/tests/sqlite_migration_tests.sh
    deploy_expo:
        docker:
            - image: circleci/node:13.5.0
        steps:
            - checkout
            - run: cd ~ && git clone https://github.com/danbenn/step-bible-secrets.git
            - run: cp ~/step-bible-secrets/.env app
            - run: cp ~/step-bible-secrets/esvSearchIndex.db app/assets
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-modules-{{ checksum "yarn.lock" }}
            - run: yarn install --frozen-lockfile
            - run: cd app && yarn install --frozen-lockfile
            - run: yarn global add expo-cli
            - run:
                  command: |
                      export PATH="$PATH:$( yarn global bin )"
                      cd app
                      expo login --non-interactive -u technical@tyndalehouse.com
                      EXPO_DEBUG=true expo publish --non-interactive --release-channel $(git rev-parse --short HEAD)
    deploy_android:
        macos:
            xcode: 11.3.0
        steps:
            - checkout
            - run: cd ~ && git clone https://github.com/danbenn/step-bible-secrets.git
            - run: cp ~/step-bible-secrets/android_upload_key_secrets.json ~/secrets.json
            - restore_cache:
                  name: Restore Yarn Mac Package Cache
                  keys:
                      - yarn-mac-{{ checksum "yarn.lock" }}
            - run: yarn install --frozen-lockfile
            - run: cd app && yarn install --frozen-lockfile
            - run: cd app && yarn expo login --non-interactive -u technical@tyndalehouse.com
            - run:
                  command: cd app && yarn expo build:android --non-interactive --no-publish --release-channel $(git rev-parse --short HEAD)
                  no_output_timeout: 30m
            - run:
                  command: cd app && yarn expo build:android --non-interactive --no-publish -t app-bundle --release-channel $(git rev-parse --short HEAD)
                  no_output_timeout: 30m
            - run: cd app && yarn expo upload:android --non-interactive --key ~/secrets.json
    deploy_ios:
        macos:
            xcode: 11.3.0
        steps:
            - checkout
            - restore_cache:
                  name: Restore Yarn Mac Package Cache
                  keys:
                      - yarn-mac-{{ checksum "yarn.lock" }}
            - run: yarn install --frozen-lockfile
            - run: cd app && yarn install --frozen-lockfile
            - save_cache:
                  name: Save Yarn Mac Package Cache
                  key: yarn-mac-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules
                      - app/node_modules
            - run: cd app && yarn expo login --non-interactive -u technical@tyndalehouse.com
            - run:
                  command: cd app && yarn expo build:ios --non-interactive --no-publish --release-channel $(git rev-parse --short HEAD)
                  no_output_timeout: 30m
            - run: cd app && yarn expo upload:ios --non-interactive
    build_android:
        docker:
            - image: circleci/android:api-29-node
        working_directory: ~/project/step-bible
        steps:
            - checkout:
                  path: ~/project
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-modules-{{ checksum "../yarn.lock" }}
            - run: cd ../core && yarn build #build @bible-engine/core
            - run: yarn build
            - run: npx cap sync
            - restore_cache:
                  key: jars-{{ checksum "android/build.gradle" }}-{{ checksum  "android/build.gradle" }}
            - run:
                  name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
                  command: sudo chmod +x ./android/gradlew
            - run:
                  name: Download Dependencies
                  command: cd android && ./gradlew androidDependencies --debug
            - save_cache:
                  paths:
                      - ~/.gradle
                  key: jars-{{ checksum "android/build.gradle" }}-{{ checksum  "android/build.gradle" }}
            - run:
                  name: Copy configuration files
                  command: cp config/Android/AndroidManifest.xml android/app/src/main/AndroidManifest.xml
            - run: # https://developer.android.com/studio/build/building-cmdline This creates an APK named module_name-debug.apk in project_name/module_name/build/outputs/apk/
                  name: Build debug APK and release APK
                  command: |
                      cd android
                      ./gradlew :app:assembleDebug
                      ./gradlew :app:assembleRelease
                      ./gradlew :app:assembleDebugAndroidTest
            - run:
                  name: Run Tests
                  command: cd android && ./gradlew lint test
            - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
                  path: android/app/build/reports
                  destination: reports
            - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
                  path: android/app/build/outputs/apk
            # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
            #     path: android/app/src/main/assets/public
            - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
                  path: android/app/build/test-results
            - persist_to_workspace:
                  root: android/app/build/outputs
                  paths:
                      - ./apk/*
